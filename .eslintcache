[{"/Users/cat/Desktop/Desktop stuffs 2/IMS submission/client/src/index.js":"1","/Users/cat/Desktop/Desktop stuffs 2/IMS submission/client/src/Pages/home.js":"2","/Users/cat/Desktop/Desktop stuffs 2/IMS submission/client/src/Pages/login.js":"3"},{"size":442,"mtime":1620854996520,"results":"4","hashOfConfig":"5"},{"size":12312,"mtime":1627397832300,"results":"6","hashOfConfig":"5"},{"size":5754,"mtime":1627726574669,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1nvthlf",{"filePath":"11","messages":"12","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"/Users/cat/Desktop/Desktop stuffs 2/IMS submission/client/src/index.js",[],["17","18"],"/Users/cat/Desktop/Desktop stuffs 2/IMS submission/client/src/Pages/home.js",["19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Axios from \"axios\";\nimport 'fontsource-roboto';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport {useHistory} from 'react-router-dom';\nimport { Grid, ButtonGroup, Card, Hidden} from \"@material-ui/core\";\n\nfunction Home(){\n\nconst [WWMtotal, setWWMTotal]=useState([])\nconst [WWFtotal, setWWFTotal]=useState([])\nconst [WBMtotal, setWBMTotal]=useState([])\nconst [WBFtotal, setWBFTotal]=useState([])\nconst [Troutotal, setTrouTotal]=useState([])\nconst [Skitotal, setSkiTotal]=useState([])\nconst [Slatotal, setSlaTotal]=useState([])\nconst [TieStotal, setTieSTotal]=useState([])\nconst [TieLtotal, setTieLTotal]=useState([])\nconst [Bertotal, setBerTotal]=useState([])\nconst [WWMstores, setWWMStores]=useState([])\nconst [WWFstores, setWWFStores]=useState([])\nconst [WBMstores, setWBMStores]=useState([])\nconst [WBFstores, setWBFStores]=useState([])\nconst [Troustores, setTrouStores]=useState([])\nconst [Skistores, setSkiStores]=useState([])\nconst [Slastores, setSlaStores]=useState([])\nconst [TieSstores, setTieSStores]=useState([])\nconst [TieLstores, setTieLStores]=useState([])\nconst [Berstores, setBerStores]=useState([])\nconst [WWMsize, setWWMSize]=useState([])\nconst [WWFsize, setWWFSize]=useState([])\nconst [WBMsize, setWBMSize]=useState([])\nconst [WBFsize, setWBFSize]=useState([])\nconst [Trousize, setTrouSize]=useState([])\nconst [Skisize, setSkiSize]=useState([])\nconst [Slasize, setSlaSize]=useState([])\nconst [TieSsize, setTieSSize]=useState([])\nconst [TieLsize, setTieLSize]=useState([])\nconst [Bertsize, setBerSize]=useState([])\nconst [WWMissued, setWWMIssued]=useState([])\nconst [WWFissued, setWWFIssued]=useState([])\nconst [WBMissued, setWBMIssued]=useState([])\nconst [WBFissued, setWBFIssued]=useState([])\nconst [Trouissued, setTrouIssued]=useState([])\nconst [Skiissued, setSkiIssued]=useState([])\nconst [Slaissued, setSlaIssued]=useState([])\nconst [TieSissued, setTieSIssued]=useState([])\nconst [TieLissued, setTieLIssued]=useState([])\nconst [Bertissued, setBerIssued]=useState([])\n\n\nuseEffect(()=>{\n  Axios.get(\"https://rafacims-deploy.herokuapp.com/Total\")\n  .then(resp=>{\n    console.log(resp)\n    setWWMTotal(resp.data[0].TotalStock)\n    setWWFTotal(resp.data[1].TotalStock)\n    setWBMTotal(resp.data[2].TotalStock)\n    setWBFTotal(resp.data[3].TotalStock)\n    setTrouTotal(resp.data[4].TotalStock)\n    setSkiTotal(resp.data[5].TotalStock)\n    setSlaTotal(resp.data[6].TotalStock)\n    setTieSTotal(resp.data[7].TotalStock)\n    setTieLTotal(resp.data[8].TotalStock)\n    setBerTotal(resp.data[9].TotalStock)\n  })\n},[])\n\n\nuseEffect(()=>{\n  Axios.get(\"https://rafacims-deploy.herokuapp.com/Stores\")\n  .then(resp=>{\n    setWWMStores(resp.data[0].StoresStock)\n    setWWFStores(resp.data[1].StoresStock)\n    setWBMStores(resp.data[2].StoresStock)\n    setWBFStores(resp.data[3].StoresStock)\n    setTrouStores(resp.data[4].StoresStock)\n    setSkiStores(resp.data[5].StoresStock)\n    setSlaStores(resp.data[6].StoresStock)\n    setTieSStores(resp.data[7].StoresStock)\n    setTieLStores(resp.data[8].StoresStock)\n    setBerStores(resp.data[9].StoresStock)\n  })\n},[])\nconsole.log(Troustores)\n\nuseEffect(()=>{\n  Axios.get(\"https://rafacims-deploy.herokuapp.com/Issued\")\n  .then(resp=>{\n    //console.log(resp)\n    setWWMIssued(resp.data[0].IssuedStock)\n    setWWFIssued(resp.data[1].IssuedStock)\n    setWBMIssued(resp.data[2].IssuedStock)\n    setWBFIssued(resp.data[3].IssuedStock)\n    setTrouIssued(resp.data[4].IssuedStock)\n    setSkiIssued(resp.data[5].IssuedStock)\n    setSlaIssued(resp.data[6].IssuedStock)\n    setTieSIssued(resp.data[7].IssuedStock)\n    setTieLIssued(resp.data[8].IssuedStock)\n    setBerIssued(resp.data[9].IssuedStock)\n  })\n},[])\n//console.log(issued)\n\nuseEffect(()=>{\n  Axios.get(\"https://rafacims-deploy.herokuapp.com/Sizes\")\n  .then(resp=>{\n    console.log(resp)\n    setWWMSize(resp.data[0].Sizes)\n    setWWFSize(resp.data[1].Sizes)\n    setWBMSize(resp.data[2].Sizes)\n    setWBFSize(resp.data[3].Sizes)\n    setTrouSize(resp.data[4].Sizes)\n    //setSkiSize(resp.data[5].Sizes)\n    //setSlaSize(resp.data[6].Sizes)\n    //setTieSSize(resp.data[7].Sizes)\n    //setTieLSize(resp.data[8].Sizes)\n    //setBerSize(resp.data[9].Sizes)\n  })\n},[])\n\nconst [loginStatus, setLoginStatus] = useState(true);\nlet history = useHistory();\nconst [anchorEl, setAnchorEl] = React.useState(null);\nconst open = Boolean(anchorEl);\nconst handleMenu = (event) => {\n  setAnchorEl(event.currentTarget);\n};\nconst handleClose = () => {\n  setAnchorEl(null);\n};\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\nconst LogOut =()=>{\n  setLoginStatus(false);\n  history.push(\"/\");\n}\n\n\n\nconst createData = (name, stores, issued, total )=>{\n  return {\n    name,\n    stores,\n    issued,\n    total,\n    details: [\n      { Size: '60/60/60', Stores: 43, issued: 3 , total: 46},\n    ],\n  };\n}\n\n\nconst Row = (props)=>{\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell>{row.stores}</TableCell>\n        <TableCell>{row.issued}</TableCell>\n        <TableCell>{row.total}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Details\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Size:</TableCell>\n                    <TableCell>Stores:</TableCell>\n                    <TableCell>Issued:</TableCell>\n                    <TableCell>Total:</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.details.map((detailsRow) => (\n                    <TableRow key={detailsRow.Size}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {detailsRow.Size}\n                      </TableCell>\n                      <TableCell>{detailsRow.Stores}</TableCell>\n                      <TableCell>{detailsRow.issued}</TableCell>\n                      <TableCell>{detailsRow.total}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n\n\n\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    stores: PropTypes.number.isRequired,\n    issued: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    details: PropTypes.arrayOf(\n      PropTypes.shape({\n        Size: PropTypes.string.isRequired,\n        Stores: PropTypes.number.isRequired,\n        issued: PropTypes.number.isRequired,\n        total: PropTypes.number.isRequired,\n      }),\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\n\nconst rows = [\n  createData('Wedgewood Shirt (M)', WWMstores, WWMissued, WWMtotal),\n  createData('Wedgewood Shirt (F)', WWFstores, WWFissued, WWFtotal),\n  createData('Working Blue Shirt (M)', WBMstores, WBMissued, WBMtotal),\n  createData('Working Blue Shirt (F)', WBFstores, WBFissued, WBFtotal),\n  createData('Trousers', Troustores, Trouissued, Troutotal),\n  createData('Skirt', Skistores, Skiissued, Skitotal), \n  createData('Slacks', Slastores, Slaissued, Slatotal),\n  createData('Tie (Short)', TieSstores, TieSissued, TieStotal), \n  createData('Tie (Long)', TieLstores, TieLissued ,TieLtotal), \n  createData('Beret', Berstores, Bertissued, Bertotal),\n];\n\n  return (\n    <div className=\"App\">\n\n      <AppBar position=\"static\">\n         <Toolbar \n         style={{\n           justifyContent: 'center',\n           display: \"inline-flex\",\n         }}\n         >\n           <Hidden xsDown>\n       \n           <ButtonGroup \n           color=\"inherit\"\n            variant=\"text\" \n            aria-label=\"text primary button group\">\n           <Button onClick={()=>{\n             if(loginStatus===true){\n               history.push(\"/Pages/home\")\n             }else{\n               history.push(\"/\")\n             }\n           }}>Home</Button>\n           <Button onClick={()=>{\n             if(loginStatus===true){\n               history.push(\"/Pages/Stock\")\n             }else{\n               history.push(\"/\")\n             }\n           }}>Add items</Button>\n           \n        \n           </ButtonGroup>\n          \n           <IconButton\n                 aria-label=\"account of current user\"\n                 aria-controls=\"menu-appbar\"\n                 aria-haspopup=\"true\"\n                 onClick={handleMenu}\n                 color=\"inherit\"\n               >\n                 <AccountCircle />\n               </IconButton>\n               <Menu\n                 id=\"menu-appbar\"\n                 anchorEl={anchorEl}\n                 anchorOrigin={{\n                   vertical: 'top',\n                   horizontal: 'center',\n                 }}\n                 \n                 open={open}\n                 onClose={handleClose}\n               >\n                 <MenuItem onClick={()=>{LogOut();}}>Logout</MenuItem>\n               </Menu>\n               </Hidden>\n \n              <Hidden smUp>\n               <IconButton\n                 aria-label=\"more\"\n                 aria-controls=\"menu-appbar\"\n                 aria-haspopup=\"true\"\n                 onClick={handleMenu}\n                 color=\"inherit\"\n               >\n                 <MenuIcon />Menu\n               </IconButton>\n               <Menu\n                 id=\"menu-appbar\"\n                 anchorEl={anchorEl}\n                 anchorOrigin={{\n                   vertical: 'top',\n                   horizontal: 'center',\n                 }}\n                 \n                 open={open}\n                 onClose={handleClose}\n               >\n                 <MenuItem onClick={()=>{\n             if(loginStatus===true){\n               history.push(\"/Pages/home\")\n             }else{\n               history.push(\"/\")\n             }\n           }}>Home</MenuItem>\n               </Menu>\n               </Hidden>\n               \n              \n           \n           \n         </Toolbar>\n       </AppBar>\n       <h1>Welcome Back!</h1>\n       <h3>Here's an overview of the current stock</h3>\n       <Card>\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Name:</TableCell>\n            <TableCell>In Stores:</TableCell>\n            <TableCell>Issued:</TableCell>\n            <TableCell>Total:</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <Row key={row.name} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Card>\n    </div>\n  );\n};\nexport default Home;\n","/Users/cat/Desktop/Desktop stuffs 2/IMS submission/client/src/Pages/login.js",["38","39","40","41","42","43","44","45","46","47","48"],"import React, {useEffect, useState} from \"react\"; \nimport './App.css';\nimport Axios from \"axios\";\nimport 'fontsource-roboto';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid, ButtonGroup, Card, Hidden} from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Link, NavLink, Redirect, useHistory} from 'react-router-dom';\n\nfunction Log_in() {\n \n  const [usernameReg, setUsernameReg] = useState('');\n  const [passwordReg, setPasswordReg] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [usernameTextIDs] = useState('');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const [passwordTextIDs] = useState('');\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  let history = useHistory();\n\n  Axios.defaults.withCredentials = true;\n\n  //const register = () => {\n    //Axios.post(\"https://rafacims-deploy.herokuapp.com/register\", {\n     // username: usernameReg,\n      //password: passwordReg,\n   // }).then((response) => {\n    //console.log(response.data);\n   // });\n  //};\n\n  const login = () => {\n    Axios.post(\"https://rafacims-deploy.herokuapp.com/login\", {\n      headers:{\n        \"Access-Control-Allow-Origin\": true, \n      },\n      username: username,\n      password: password,\n    }).then((response) => {\n      if (!response.data.auth){\n        setLoginStatus(false);\n      } else {\n        localStorage.setItem(\"token\", response.data.token);\n        setLoginStatus(true); \n        history.push(\"/Pages/home\");\n      }\n  });\n  };\n\n  const refresh = ()=>{\n    window.location.reload();\n  }\n\n  const userAuthenticated = () =>{\n    Axios.get(\"https://rafacims-deploy.herokuapp.com/isUserAuth\",{\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n\n      }\n    }).then ((response)=>{\n      console.log(response);\n    });\n  }\n\n\n  return (\n\n    <div className=\"App\">\n\n     <AppBar position=\"static\">\n        <Toolbar \n        style={{\n          justifyContent: 'center',\n          display: \"inline-flex\",\n        }}\n        >\n          <Hidden xsDown>\n      \n          <ButtonGroup \n           color=\"inherit\"\n            variant=\"text\" \n            aria-label=\"text primary button group\">\n           <Button onClick={()=>{\n             if(loginStatus===true){\n               history.push(\"/Pages/home\")\n             }else{\n               history.push(\"/\")\n             }\n           }}>Home</Button>\n           </ButtonGroup>\n         \n          \n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                \n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem>LogIn</MenuItem>\n                \n              </Menu>\n              </Hidden>\n\n             <Hidden smUp>\n              <IconButton\n                aria-label=\"more\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />Menu\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                \n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Home</MenuItem>\n                <MenuItem onClick={handleClose}>Log Out</MenuItem>\n  \n              </Menu>\n              </Hidden>\n              \n             \n          \n          \n        </Toolbar>\n      </AppBar>\n\n      <Grid container\n        direction=\"column\"\n        alignItems=\"center\"\n        spacing={1} \n      >\n\n        <Grid item xs={3}>\n        <Card\n        style={\n          {\n           justifyContent: 'center',\n           display: 'inline-flex',\n           maxWidth: '300px',\n           minWidth: '190px',\n           margin: 10,\n          }\n        } \n        >\n\n        <div \n        className=\"login\" \n        style={\n          {\n           justifyContent: 'center',\n           display: 'inline-block',\n           margin: 12,}\n        \n        }>\n          <h2>Login</h2>\n          <TextField id={usernameTextIDs} label=\"Username\" \n          onChange={(e) =>{\n          setUsername(e.target.value);\n        }}/>\n        \n        <TextField\n          id={passwordTextIDs}\n          label=\"Password\"\n          type=\"password\"\n          onChange={(e) => {\n            setPassword(e.target.value)\n          }}/>\n          <br></br>\n        \n          <Button \n          variant=\"contained\" \n          color=\"primary\" \n          style={\n            {\n             justifyContent: 'center',\n             display: \"inline\",\n             margin: 12,}\n          \n          }\n          onClick={()=>{\n            login();\n            \n          \n          }}\n            >Login</Button>\n          \n      </div>\n      </Card>\n      </Grid>\n      </Grid>\n     </div>\n     //</div>\n  );\n        }\n\n\nexport default Log_in;\n\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":25,"column":8,"nodeType":"55","messageId":"56","endLine":25,"endColumn":29},{"ruleId":"53","severity":1,"message":"57","line":26,"column":8,"nodeType":"55","messageId":"56","endLine":26,"endColumn":27},{"ruleId":"53","severity":1,"message":"58","line":28,"column":10,"nodeType":"55","messageId":"56","endLine":28,"endColumn":14},{"ruleId":"53","severity":1,"message":"59","line":52,"column":8,"nodeType":"55","messageId":"56","endLine":52,"endColumn":15},{"ruleId":"53","severity":1,"message":"60","line":53,"column":8,"nodeType":"55","messageId":"56","endLine":53,"endColumn":15},{"ruleId":"53","severity":1,"message":"61","line":54,"column":8,"nodeType":"55","messageId":"56","endLine":54,"endColumn":15},{"ruleId":"53","severity":1,"message":"62","line":55,"column":8,"nodeType":"55","messageId":"56","endLine":55,"endColumn":15},{"ruleId":"53","severity":1,"message":"63","line":56,"column":8,"nodeType":"55","messageId":"56","endLine":56,"endColumn":16},{"ruleId":"53","severity":1,"message":"64","line":57,"column":8,"nodeType":"55","messageId":"56","endLine":57,"endColumn":15},{"ruleId":"53","severity":1,"message":"65","line":57,"column":17,"nodeType":"55","messageId":"56","endLine":57,"endColumn":27},{"ruleId":"53","severity":1,"message":"66","line":58,"column":8,"nodeType":"55","messageId":"56","endLine":58,"endColumn":15},{"ruleId":"53","severity":1,"message":"67","line":58,"column":17,"nodeType":"55","messageId":"56","endLine":58,"endColumn":27},{"ruleId":"53","severity":1,"message":"68","line":59,"column":8,"nodeType":"55","messageId":"56","endLine":59,"endColumn":16},{"ruleId":"53","severity":1,"message":"69","line":59,"column":18,"nodeType":"55","messageId":"56","endLine":59,"endColumn":29},{"ruleId":"53","severity":1,"message":"70","line":60,"column":8,"nodeType":"55","messageId":"56","endLine":60,"endColumn":16},{"ruleId":"53","severity":1,"message":"71","line":60,"column":18,"nodeType":"55","messageId":"56","endLine":60,"endColumn":29},{"ruleId":"53","severity":1,"message":"72","line":61,"column":8,"nodeType":"55","messageId":"56","endLine":61,"endColumn":16},{"ruleId":"53","severity":1,"message":"73","line":61,"column":18,"nodeType":"55","messageId":"56","endLine":61,"endColumn":28},{"ruleId":"53","severity":1,"message":"74","line":183,"column":16,"nodeType":"55","messageId":"56","endLine":183,"endColumn":23},{"ruleId":"53","severity":1,"message":"75","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"76","line":11,"column":8,"nodeType":"55","messageId":"56","endLine":11,"endColumn":21},{"ruleId":"53","severity":1,"message":"77","line":15,"column":9,"nodeType":"55","messageId":"56","endLine":15,"endColumn":13},{"ruleId":"53","severity":1,"message":"78","line":15,"column":15,"nodeType":"55","messageId":"56","endLine":15,"endColumn":22},{"ruleId":"53","severity":1,"message":"79","line":15,"column":24,"nodeType":"55","messageId":"56","endLine":15,"endColumn":32},{"ruleId":"53","severity":1,"message":"80","line":19,"column":10,"nodeType":"55","messageId":"56","endLine":19,"endColumn":21},{"ruleId":"53","severity":1,"message":"81","line":19,"column":23,"nodeType":"55","messageId":"56","endLine":19,"endColumn":37},{"ruleId":"53","severity":1,"message":"82","line":20,"column":10,"nodeType":"55","messageId":"56","endLine":20,"endColumn":21},{"ruleId":"53","severity":1,"message":"83","line":20,"column":23,"nodeType":"55","messageId":"56","endLine":20,"endColumn":37},{"ruleId":"53","severity":1,"message":"84","line":65,"column":9,"nodeType":"55","messageId":"56","endLine":65,"endColumn":16},{"ruleId":"53","severity":1,"message":"85","line":69,"column":9,"nodeType":"55","messageId":"56","endLine":69,"endColumn":26},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'KeyboardArrowDownIcon' is defined but never used.","Identifier","unusedVar","'KeyboardArrowUpIcon' is defined but never used.","'Grid' is defined but never used.","'WWMsize' is assigned a value but never used.","'WWFsize' is assigned a value but never used.","'WBMsize' is assigned a value but never used.","'WBFsize' is assigned a value but never used.","'Trousize' is assigned a value but never used.","'Skisize' is assigned a value but never used.","'setSkiSize' is assigned a value but never used.","'Slasize' is assigned a value but never used.","'setSlaSize' is assigned a value but never used.","'TieSsize' is assigned a value but never used.","'setTieSSize' is assigned a value but never used.","'TieLsize' is assigned a value but never used.","'setTieLSize' is assigned a value but never used.","'Bertsize' is assigned a value but never used.","'setBerSize' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'useEffect' is defined but never used.","'AccountCircle' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'usernameReg' is assigned a value but never used.","'setUsernameReg' is assigned a value but never used.","'passwordReg' is assigned a value but never used.","'setPasswordReg' is assigned a value but never used.","'refresh' is assigned a value but never used.","'userAuthenticated' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]